@{
    Layout = "_LayoutClient";
    ViewData["Title"] = "Manage Biddings";
}

@model Freelancing.Models.Entities.Project

<div class="p-4 sm:ml-64">
    <div class="p-4 mt-20">
        <div class="mt-4">
            <div class="block w-full p-6">
                <h2 class="mb-4 text-3xl font-bold text-gray-900">@Model.ProjectName</h2>
                <div class="flex items-center mb-2">
                    <h5 class="text-xl font-bold tracking-tight text-gray-900 mr-2">Budget:</h5>
                    <span class="ms-2 text-xl font-light tracking-tight text-gray-900">₱@Model.Budget</span>
                </div>
                <div class="flex items-center mb-2">
                    <h5 class="text-xl font-bold tracking-tight text-gray-900 mr-2">Category:</h5>
                    <span class="ms-2 text-xl font-light tracking-tight text-gray-900">@Model.Category</span>
                </div>
                <div class="flex items-center mb-2">
                    <h5 class="text-xl font-bold tracking-tight text-gray-900 mr-2">Required Skills:</h5>
                    @if (Model.ProjectSkills != null && Model.ProjectSkills.Any())
                    {
                        <div class="flex flex-wrap gap-2">
                            @foreach (var projectSkill in Model.ProjectSkills)
                            {
                                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">
                                    @projectSkill.UserSkill.Name
                                </span>
                            }
                        </div>
                    }
                </div>
                <h5 class="mb-2 text-xl font-light tracking-tight text-gray-900">@Model.ProjectDescription</h5>
            </div>
        </div>
        <div class="mt-4">
            <div class="block w-full p-6">
                <h2 class="mb-4 text-3xl font-bold text-gray-900">Biddings</h2>
                @if (Model.AcceptedBid != null)
                {
                    var bid = Model.AcceptedBid;
                    <div class="mb-5 p-6 border border-gray-200 rounded-lg shadow-sm">
                        <div class="flex items-center mb-3">
                            @if (!string.IsNullOrEmpty(bid.User.Photo))
                            {
                                <div class="rounded-full cursor-pointer hover:bg-gray-100 transition-colors duration-200" onclick="openProfileBidModal('@bid.User.Id')">
                                    <img class="w-8 h-8 rounded-full" src="@bid.User.Photo" alt="user photo">
                                </div>
                            }
                            else
                            {
                                <div class="rounded-full cursor-pointer hover:bg-gray-100 transition-colors duration-200" onclick="openProfileBidModal('@bid.User.Id')">
                                    <img class="w-8 h-8 rounded-full" src="https://ik.imagekit.io/6txj3mofs/GIGHub%20(11).png?updatedAt=1750552804497" alt="user photo">
                                </div>
                            }
                            <h5 class="ms-2 text-xl font-bold tracking-tight text-gray-900">@bid.User?.FirstName @bid.User?.LastName</h5>
                        </div>
                        <div class="flex items-center mb-2">
                            <h5 class="text-md font-bold tracking-tight text-gray-900 mr-2">Budget Proposal:</h5>
                            <span class="ms-2 text-md font-light tracking-tight text-gray-900">₱@bid.Budget</span>
                        </div>
                        <div class="flex items-center mb-2">
                            <h5 class="text-md font-bold tracking-tight text-gray-900 mr-2">Delivery Time Proposal:</h5>
                            <span class="ms-2 text-md font-light tracking-tight text-gray-900">@bid.Delivery</span>
                        </div>
                        <p class="text-md font-light tracking-tight text-gray-900 mr-2">@bid.Proposal</p>
                        @if (!string.IsNullOrEmpty(bid.PreviousWorksPaths))
                        {
                            <div class="mt-4">
                                <h6 class="text-sm font-semibold text-gray-700 mb-2">Previous Works:</h6>
                                <div class="flex flex-wrap gap-2">
                                    @try
                                    {
                                        var filePaths = System.Text.Json.JsonSerializer.Deserialize<List<string>>(bid.PreviousWorksPaths);
                                        foreach (var filePath in filePaths)
                                        {
                                            var fileName = System.IO.Path.GetFileName(filePath);
                                            var fileExtension = System.IO.Path.GetExtension(filePath).ToLowerInvariant();
                                            var isImage = new[] { ".jpg", ".jpeg", ".png", ".gif", ".svg" }.Contains(fileExtension);

                                            <div class="flex items-center space-x-2 p-2 bg-gray-50 rounded">
                                                @if (isImage)
                                                {
                                                    <img src="@filePath" alt="@fileName" class="w-8 h-8 object-cover rounded cursor-pointer" onclick="openImageModal('@filePath')" title="Click to view">
                                                }
                                                else
                                                {
                                                    <div class="w-8 h-8 bg-blue-100 rounded flex items-center justify-center">
                                                        <svg class="w-4 h-4 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                                                        </svg>
                                                    </div>
                                                }
                                                <a href="@filePath" target="_blank" class="text-sm text-blue-600 hover:text-blue-800 truncate max-w-32" title="@fileName">
                                                    @fileName
                                                </a>
                                            </div>
                                        }
                                    }
                                    catch
                                    {
                                        <span class="text-sm text-gray-500">Error loading files</span>
                                    }
                                </div>
                            </div>
                        }

                        @if (!string.IsNullOrEmpty(bid.RepositoryLinks))
                        {
                            <div class="mt-4">
                                <h6 class="text-sm font-semibold text-gray-700 mb-2">Repository/Drive Links:</h6>
                                <div class="flex flex-wrap gap-2">
                                    @try
                                    {
                                        var links = System.Text.Json.JsonSerializer.Deserialize<List<string>>(bid.RepositoryLinks);
                                        foreach (var link in links)
                                        {
                                            <div class="flex items-center space-x-2 p-2 bg-blue-50 rounded">
                                                <div class="w-6 h-6 bg-blue-100 rounded flex items-center justify-center">
                                                    <svg class="w-4 h-4 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                                                    </svg>
                                                </div>
                                                <a href="@link" target="_blank" class="text-sm text-blue-600 hover:text-blue-800 truncate max-w-48" title="@link">
                                                    @link
                                                </a>
                                            </div>
                                        }
                                    }
                                    catch
                                    {
                                        <span class="text-sm text-gray-500">Error loading links</span>
                                    }
                                </div>
                            </div>
                        }
                        <img class="mt-2 w-auto h-8" src="https://ik.imagekit.io/6txj3mofs/accept.png?updatedAt=1750270981334" />
                    </div>
                }
                else
                {
                    @foreach (var bid in Model.Biddings)
                    {
                        <div class="mb-5 p-6 border border-gray-200 rounded-lg shadow-sm">
                            <div class="flex items-center mb-3">
                                @if (!string.IsNullOrEmpty(bid.User.Photo))
                                {
                                    <div class="rounded-full cursor-pointer hover:bg-gray-100 transition-colors duration-200" onclick="openProfileBidModal('@bid.User.Id')">
                                        <img class="w-8 h-8 rounded-full" src="@bid.User.Photo" alt="user photo">
                                    </div>
                                }
                                else
                                {
                                    <div class="rounded-full cursor-pointer hover:bg-gray-100 transition-colors duration-200" onclick="openProfileBidModal('@bid.User.Id')">
                                        <img class="w-8 h-8 rounded-full" src="https://ik.imagekit.io/6txj3mofs/GIGHub%20(11).png?updatedAt=1750552804497" alt="user photo">
                                    </div>
                                }
                                <h5 class="ms-2 text-xl font-bold tracking-tight text-gray-900">@bid.User?.FirstName @bid.User?.LastName</h5>
                            </div>
                            <hr class="border-gray-300 mb-4">
                            <div class="flex items-center mb-2">
                                <h5 class="text-md font-bold tracking-tight text-gray-900 mr-2">Budget Proposal:</h5>
                                <span class="ms-2 text-md font-light tracking-tight text-gray-900">₱@bid.Budget</span>
                            </div>
                            <div class="flex items-center mb-2">
                                <h5 class="text-md font-bold tracking-tight text-gray-900 mr-2">Delivery Time Proposal:</h5>
                                <span class="ms-2 text-md font-light tracking-tight text-gray-900">@bid.Delivery</span>
                            </div>
                            <p class="text-md font-light tracking-tight text-gray-900 mr-2">@bid.Proposal</p>
                            @if (!string.IsNullOrEmpty(bid.PreviousWorksPaths))
                            {
                                <div class="mt-4">
                                    <h6 class="text-sm font-semibold text-gray-700 mb-2">Previous Works:</h6>
                                    <div class="flex flex-wrap gap-2">
                                        @try
                                        {
                                            var filePaths = System.Text.Json.JsonSerializer.Deserialize<List<string>>(bid.PreviousWorksPaths);
                                            foreach (var filePath in filePaths)
                                            {
                                                var fileName = System.IO.Path.GetFileName(filePath);
                                                var fileExtension = System.IO.Path.GetExtension(filePath).ToLowerInvariant();
                                                var isImage = new[] { ".jpg", ".jpeg", ".png", ".gif", ".svg" }.Contains(fileExtension);

                                                <div class="flex items-center space-x-2 p-2 bg-gray-50 rounded border border-gray-300">
                                                    @if (isImage)
                                                    {
                                                        <img src="@filePath" alt="@fileName" class="w-8 h-8 object-cover rounded cursor-pointer" onclick="openImageModal('@filePath')" title="Click to view">
                                                    }
                                                    else
                                                    {
                                                        <div class="w-8 h-8 bg-blue-100 rounded flex items-center justify-center">
                                                            <svg class="w-4 h-4 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                                                            </svg>
                                                        </div>
                                                    }
                                                    <a href="@filePath" target="_blank" class="text-sm text-blue-600 hover:text-blue-800 truncate max-w-32" title="@fileName">
                                                        @fileName
                                                    </a>
                                                </div>
                                            }
                                        }
                                        catch
                                        {
                                            <span class="text-sm text-gray-500">Error loading files</span>
                                        }
                                    </div>
                                </div>
                            }

                            @if (!string.IsNullOrEmpty(bid.RepositoryLinks))
                            {
                                <div class="mt-4">
                                    <h6 class="text-sm font-semibold text-gray-700 mb-2">Repository/Drive Links:</h6>
                                    <div class="flex flex-wrap gap-2">
                                        @try
                                        {
                                            var links = System.Text.Json.JsonSerializer.Deserialize<List<string>>(bid.RepositoryLinks);
                                            foreach (var link in links)
                                            {
                                                <div class="flex items-center space-x-2 p-2 bg-blue-50 rounded border border-gray-300">
                                                    <div class="w-6 h-6 bg-blue-100 rounded flex items-center justify-center">
                                                        <svg class="w-4 h-4 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                                                        </svg>
                                                    </div>
                                                    <a href="@link" target="_blank" class="text-sm text-blue-600 hover:text-blue-800 truncate max-w-48" title="@link">
                                                        @link
                                                    </a>
                                                </div>
                                            }
                                        }
                                        catch
                                        {
                                            <span class="text-sm text-gray-500">Error loading links</span>
                                        }
                                    </div>
                                </div>
                            }
                            <form id="acceptBidForm_@bid.Id" asp-controller="Client" asp-action="AcceptBid" method="post" style="display: none;">
                                <input type="hidden" name="projectId" value="@Model.Id" />
                                <input type="hidden" name="bidId" value="@bid.Id" />
                            </form>

                            <button type="button"
                                    data-modal-target="acceptBidModal_@bid.Id"
                                    data-modal-toggle="acceptBidModal_@bid.Id"
                                    class="focus:outline-none text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mt-3">
                                Accept
                            </button>
                        </div>

                    }
                    @foreach (var bid in Model.Biddings)
                    {
                        <div id="acceptBidModal_@bid.Id" tabindex="-1" class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full">
                            <div class="modal-backdrop absolute inset-0 bg-opacity-50 bg-opacity-50"></div>
                            <div class="relative p-4 w-full max-w-md max-h-full">
                                <div class="relative bg-white rounded-lg shadow">
                                    <button type="button" class="absolute top-3 end-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center" data-modal-hide="acceptBidModal_@bid.Id">
                                        <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
                                        </svg>
                                        <span class="sr-only">Close modal</span>
                                    </button>

                                    <div class="p-6 text-center">
                                        <svg class="mx-auto mb-4 text-gray-500 w-12 h-12" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 11V6m0 8h.01M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
                                        </svg>
                                        <h3 class="mb-5 text-lg font-normal text-gray-800">Are you sure you want to accept @bid.User?.FirstName @bid.User?.LastName's bid?</h3>

                                        <button type="button"
                                                onclick="acceptBid('@bid.Id')"
                                                data-modal-hide="acceptBidModal_@bid.Id"
                                                class="text-white bg-green-600 hover:bg-green-800 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center me-2">
                                            Yes, I'm sure
                                        </button>
                                        <button type="button"
                                                data-modal-hide="acceptBidModal_@bid.Id"
                                                class="text-gray-500 bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-gray-200 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10">
                                            No, cancel
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>
<!-- Image Modal -->
<div id="imageModal" class="fixed inset-0 flex items-center justify-center z-50 hidden" style="background-color: rgba(0, 0, 0, 0.5); backdrop-filter: blur(8px); -webkit-backdrop-filter: blur(8px);">
    <div class="bg-white rounded-lg shadow-xl max-w-xl w-full max-h-full">
        <div class="relative p-8">
            <button type="button" class="absolute top-4 right-4 text-gray-400 hover:text-gray-600 rounded-full p-2 hover:bg-gray-100 transition-colors duration-200" onclick="closeImageModal()">
                <svg class="w-7 h-7" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
            </button>
            <div class="text-center">
                <img id="modalImage" src="" alt="Project Image" class="max-w-full max-h-[80vh] object-contain mx-auto">
            </div>
        </div>
    </div>
</div>

<!-- Profile Bid Modal -->
@foreach (var bid in Model.Biddings)
{
    @if (@User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value != bid.User.Id.ToString())
    {
        <div id="profileBidModal-@bid.User.Id" class="fixed inset-0 flex items-center justify-center z-50 hidden" style="background-color: rgba(0, 0, 0, 0.5); backdrop-filter: blur(8px); -webkit-backdrop-filter: blur(8px);">
            <div class="bg-white rounded-lg shadow-xl max-w-2xl w-full max-h-full mx-4">
                <div class="relative p-6">
                    <button type="button" class="absolute top-4 right-4 text-gray-400 hover:text-gray-600 rounded-full p-2 hover:bg-gray-100 transition-colors duration-200" onclick="closeProfileBidModal('@bid.User.Id')">
                        <svg class="w-7 h-7" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                    <div class="flex flex-col md:flex-row items-start space-y-4 md:space-y-0 md:space-x-6">
                        <!-- Profile Picture -->
                        <div class="flex-shrink-0">
                            @if (!string.IsNullOrEmpty(bid.User?.Photo))
                            {
                                <img src="@bid.User.Photo" alt="Profile Picture" class="w-32 h-32 rounded-full object-cover border-4 border-gray-200 shadow-lg">
                            }
                            else
                            {
                                <img src="https://ik.imagekit.io/6txj3mofs/GIGHub%20(11).png?updatedAt=1750552804497" alt="Default Profile Picture" class="w-32 h-32 rounded-full object-cover border-4 border-gray-200 shadow-lg">
                            }
                        </div>

                        <!-- Profile Information -->
                        <div class="flex-1 min-w-0">
                            <h3 class="text-2xl font-bold text-gray-900 mb-2">@(bid.User?.FirstName) @(bid.User?.LastName)</h3>

                            @if (!string.IsNullOrEmpty(bid.User?.Email))
                            {
                                <div class="flex items-center mb-2">
                                    <svg class="w-5 h-5 text-gray-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                                    </svg>
                                    <span class="text-gray-700">@bid.User?.Email</span>
                                </div>
                            }

                            @if (!string.IsNullOrEmpty(bid.User?.UserName))
                            {
                                <div class="flex items-center mb-2">
                                    <svg class="w-5 h-5 text-gray-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207"></path>
                                    </svg>
                                    <span class="text-gray-700">@bid.User?.UserName</span>
                                </div>
                            }

                            @if (bid.User.UserAccountSkills.Any())
                            {
                                <div class="mt-4">
                                    <h4 class="text-lg font-semibold text-gray-900 mb-2">Skills</h4>
                                    <div class="flex flex-wrap gap-2">
                                        @foreach (var skill in bid.User.UserAccountSkills)
                                        {
                                            <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">
                                                @skill.UserSkill.Name
                                            </span>
                                        }
                                    </div>
                                </div>
                            }

                            <!-- Action Buttons -->
                            <div class="flex flex-wrap gap-3 mt-6">
                                @await Html.PartialAsync("_ChatButton", bid.User.Id)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}


<script>
    function openImageModal(imagePath) {
        document.getElementById('modalImage').src = imagePath;
        document.getElementById('imageModal').classList.remove('hidden');
        document.body.style.overflow = 'hidden';
    }

    function closeImageModal() {
        document.getElementById('imageModal').classList.add('hidden');
        document.body.style.overflow = 'auto';
    }

    function openProfileBidModal(userId) {
        // Show modal for specific user
        document.getElementById(`profileBidModal-${userId}`).classList.remove('hidden');
        document.body.style.overflow = 'hidden';
    }

    function closeProfileBidModal(userId) {
        // Close modal for specific user
        document.getElementById(`profileBidModal-${userId}`).classList.add('hidden');
        document.body.style.overflow = 'auto';
    }

    // Close modal when clicking outside the image
    document.getElementById('imageModal').addEventListener('click', function(e) {
        if (e.target === this) {
            closeImageModal();
        }
    });

    // Close profile bid modals when clicking outside the modal
    document.addEventListener('click', function(e) {
        if (e.target.classList.contains('fixed') && e.target.id && e.target.id.startsWith('profileBidModal-')) {
            const userId = e.target.id.replace('profileBidModal-', '');
            closeProfileBidModal(userId);
        }
    });

    // Close modals with Escape key
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            closeImageModal();
            // Close any open profile bid modal
            const openBidModals = document.querySelectorAll('[id^="profileBidModal-"]:not(.hidden)');
            openBidModals.forEach(modal => {
                const userId = modal.id.replace('profileBidModal-', '');
                closeProfileBidModal(userId);
            });
        }
    });
</script>