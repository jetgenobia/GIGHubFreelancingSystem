@{
    Layout = "_LayoutClient";
    ViewData["Title"] = "Project Details";
}

@model Freelancing.Models.Entities.Project

<div class="p-4 sm:ml-64">
    <div class="p-4 mt-20">
        <div class="mt-4">
            <div class="block w-full p-6">
                <h2 class="mb-4 text-3xl font-bold text-gray-900">@Model.ProjectName</h2>
                <div class="flex items-center mb-2">
                    <h5 class="text-xl font-bold tracking-tight text-gray-900 mr-2">Category:</h5>
                    <span class="ms-2 text-xl font-light tracking-tight text-gray-900">@Model.Category</span>
                </div>
                <div class="flex items-center mb-2">
                    <h5 class="text-xl font-bold tracking-tight text-gray-900 mr-2">Budget:</h5>
                    <span class="ms-2 text-xl font-light tracking-tight text-gray-900">₱@Model.Budget</span>
                </div>
                <h5 class="mb-5 text-xl font-light tracking-tight text-gray-900">@Model.ProjectDescription</h5>
                <div class="flex items-center mb-2">
                    <h5 class="text-xl font-bold tracking-tight text-gray-900 mr-2">Required Skills:</h5>
                    @if (Model.ProjectSkills != null && Model.ProjectSkills.Any())
                    {
                        <div class="flex flex-wrap gap-2">
                            @foreach (var projectSkill in Model.ProjectSkills)
                            {
                                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">
                                    @projectSkill.UserSkill.Name
                                </span>
                            }
                        </div>
                    }
                </div>
                @if (!string.IsNullOrEmpty(Model.ImagePaths))
                {
                    <div class="mt-6">
                        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                            @{
                                var imagePaths = System.Text.Json.JsonSerializer.Deserialize<List<string>>(Model.ImagePaths);
                                foreach (var imagePath in imagePaths)
                                {
                                    <div class="relative group">
                                        <img src="@imagePath" alt="Project Image" class="w-full h-full object-cover rounded-lg shadow-md cursor-pointer hover:opacity-90 transition-opacity" onclick="openImageModal('@imagePath')">
                                    </div>
                                }
                            }
                        </div>
                    </div>
                }
                <div class="flex items-center mt-3">
                    <h5 class="text-info font-medium italic tracking-tight text-gray-900 mr-2">Posted:</h5>
                    <span class="text-info font-light italic tracking-tight text-gray-900">@Model.CreatedAt.ToString("MMM dd, yyyy 'at' h:mm tt")</span>
                </div>
            </div>
        </div>
        <div class="mt-4">
            <div class="block w-full p-6">
                <h2 class="mb-4 text-3xl font-bold text-gray-900">Biddings</h2>
                @foreach (var bid in Model.Biddings)
                {
                    <div class="mb-5 p-6 border border-gray-200 rounded-lg shadow-sm">
                        <div class="flex items-center mb-3">
                            @if (!string.IsNullOrEmpty(bid.User.Photo))
                            {
                                <img class="w-8 h-8 rounded-full" src="@bid.User.Photo" alt="user photo">
                            }
                            else
                            {
                                <img class="w-8 h-8 rounded-full" src="https://ik.imagekit.io/6txj3mofs/GIGHub%20(11).png?updatedAt=1750552804497" alt="user photo">
                            }
                            <h5 class="ms-2 text-xl font-bold tracking-tight text-gray-900">@bid.User?.FirstName @bid.User?.LastName</h5>
                        </div>
                        <hr class="border-gray-300 mb-4">
                        <div class="flex items-center mb-2">
                            <h5 class="text-md font-bold tracking-tight text-gray-900 mr-2">Budget Proposal:</h5>
                            <span class="ms-2 text-md font-light tracking-tight text-gray-900">₱@bid.Budget</span>
                        </div>
                        <div class="flex items-center mb-2">
                            <h5 class="text-md font-bold tracking-tight text-gray-900 mr-2">Delivery Time Proposal:</h5>
                            <span class="ms-2 text-md font-light tracking-tight text-gray-900">@bid.Delivery</span>
                        </div>
                        <p class="text-md font-light tracking-tight text-gray-900 mr-2">@bid.Proposal</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Image Modal -->
<div id="imageModal" class="fixed inset-0 flex items-center justify-center z-50 hidden" style="background-color: rgba(0, 0, 0, 0.5); backdrop-filter: blur(8px); -webkit-backdrop-filter: blur(8px);">
    <div class="bg-white rounded-lg shadow-xl max-w-xl w-full max-h-full">
        <div class="relative p-8">
            <button type="button" class="absolute top-4 right-4 text-gray-400 hover:text-gray-600 rounded-full p-2 hover:bg-gray-100 transition-colors duration-200" onclick="closeImageModal()">
                <svg class="w-7 h-7" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
            </button>
            <div class="text-center">
                <img id="modalImage" src="" alt="Project Image" class="max-w-full max-h-[80vh] object-contain mx-auto">
            </div>
        </div>
    </div>
</div>

<script>
    function openImageModal(imagePath) {
        document.getElementById('modalImage').src = imagePath;
        document.getElementById('imageModal').classList.remove('hidden');
        document.body.style.overflow = 'hidden';
    }

    function closeImageModal() {
        document.getElementById('imageModal').classList.add('hidden');
        document.body.style.overflow = 'auto';
    }

    // Close modal when clicking outside the image
    document.getElementById('imageModal').addEventListener('click', function(e) {
        if (e.target === this) {
            closeImageModal();
        }
    });

    // Close modal with Escape key
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            closeImageModal();
        }
    });
</script>