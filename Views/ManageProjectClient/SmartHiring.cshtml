@model SmartHiringViewModel
@{
    Layout = "_LayoutClient";
    ViewData["Title"] = "Smart Hiring - " + Model.Project.ProjectName;
}

<style>
    .smart-hiring-container {
        max-width: 1500px;
        margin: 0 auto;
        padding: 20px;
    }

    .project-header {
        background: linear-gradient(135deg, #6da1fc 0%, #4cd9fe 100%);
        color: white;
        padding: 30px;
        border-radius: 15px;
        margin-bottom: 30px;
    }

    .insights-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .insight-card {
        background: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        text-align: center;
        transition: transform 0.2s;
    }

        .insight-card:hover {
            transform: translateY(-5px);
        }

    .insight-value {
        font-size: 2em;
        font-weight: bold;
        color: #667eea;
        display: block;
    }

    .insight-label {
        color: #666;
        font-size: 0.9em;
        margin-top: 5px;
    }

    .recommendation-card {
        border: 1px solid #e1e8ed;
        border-radius: 12px;
        margin-bottom: 20px;
        overflow: hidden;
        transition: all 0.3s ease;
        background: white;
    }

    .recommendation-header {
        display: flex;
        align-items: center;
        padding: 20px;
        background: linear-gradient(135deg, #f8f9ff 0%, #ffffff 100%);
    }

    .freelancer-avatar {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        margin-left: 10px;
        margin-right: 20px;
    }

    .freelancer-info h3 {
        margin: 0;
        color: #333;
        font-size: 1.3em;
    }

    .match-score {
        margin-left: auto;
        text-align: center;
    }

    .score-circle {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.2em;
        font-weight: bold;
        margin-bottom: 5px;
    }

    .score-excellent {
        background: linear-gradient(135deg, #4CAF50, #45a049);
    }

    .score-good {
        background: linear-gradient(135deg, #2196F3, #1976D2);
    }

    .score-fair {
        background: linear-gradient(135deg, #FF9800, #F57C00);
    }

    .score-poor {
        background: linear-gradient(135deg, #f44336, #d32f2f);
    }

    .recommendation-body {
        padding-top: 20px;
        padding-left: 40px;
        padding-right: 40px;
        padding-bottom: 40px;
    }

    .recommendation-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 20px;
        margin-bottom: 20px;
    }

    .strength-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
        margin-bottom: 15px;
    }

    .strength-tag {
        background: #e8f5e8;
        color: #2e7d32;
        padding: 5px 12px;
        border-radius: 20px;
        font-size: 0.85em;
        font-weight: 500;
    }

    .concern-tag {
        background: #fff3e0;
        color: #f57c00;
        padding: 5px 12px;
        border-radius: 20px;
        font-size: 0.85em;
        font-weight: 500;
    }

    .bid-details {
        background: #f8f9fa;
        padding: 15px;
        border-radius: 8px;
        margin-bottom: 15px;
    }

    .bid-amount {
        font-size: 1.4em;
        color: #000000;
    }

    .action-buttons {
        display: flex;
        gap: 10px;
        margin-top: 20px;
    }

    .btn-primary-custom {
        background: linear-gradient(135deg, #3eb489 0%, #90ee90 100%);
        border: none;
        color: white;
        padding: 12px 24px;
        border-radius: 8px;
        font-weight: 500;
        transition: all 0.3s;
    }

        .btn-primary-custom:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
        }

    .btn-outline-custom {
        border: 2px solid #1d4ed8;
        color: #1d4ed8;
        background: transparent;
        padding: 10px 20px;
        border-radius: 8px;
        font-weight: 500;
        transition: all 0.3s;
    }

        .btn-outline-custom:hover {
            background: #1d4ed8;
            color: white;
        }

    .btn-outline-custom-1 {
        padding: 10px 20px;
        border-radius: 8px;
        font-weight: 500;
        background: #1d4ed8;
        color: white;
    }

    .ai-badge {
        background: linear-gradient(135deg, #ff6b6b, #ee5a24);
        color: white;
        padding: 5px 10px;
        border-radius: 15px;
        font-size: 0.8em;
        font-weight: bold;
        margin-left: 10px;
    }

    .confidence-indicator {
        display: flex;
        align-items: center;
        gap: 5px;
        font-size: 0.85em;
        color: #666;
    }

    .confidence-bar {
        width: 60px;
        height: 4px;
        background: #e0e0e0;
        border-radius: 2px;
        overflow: hidden;
    }

    .confidence-fill {
        height: 100%;
        background: linear-gradient(90deg, #ff6b6b, #4ecdc4);
        transition: width 0.3s ease;
    }

    .top-pick-badge {
        position: absolute;
        top: -5px;
        right: 15px;
        background: linear-gradient(135deg, #FFD700, #FFA500);
        color: #333;
        padding: 8px 16px;
        border-radius: 0 0 15px 15px;
        font-size: 0.8em;
        font-weight: bold;
        box-shadow: 0 2px 8px rgba(255, 215, 0, 0.3);
    }

            .top-pick-badge::before {
        content: "⭐";
        margin-right: 5px;
    }

    /* Modal styles */
    .modal-backdrop {
        background-color: rgba(0, 0, 0, 0.5);
        backdrop-filter: blur(4px);
    }

    [id^="acceptBidModal_"] {
        display: none;
    }

    [id^="acceptBidModal_"]:not(.hidden) {
        display: flex !important;
    }
</style>

<div class="smart-hiring-container">
    <div class="p-4 sm:ml-64">
        <div class="p-4 mt-20">
            <div class="mt-4">
                <!-- Project Header -->
                <div class="project-header">
                    <div class="flex items-center justify-center">
                        <h1 class="font-bold text-2xl">Freelancers Recommendation for @Model.Project.ProjectName</h1>
                    </div>
                </div>

                <!-- Project Insights -->
                <div class="insights-grid">
                    <div class="insight-card">
                        <span class="insight-value">@Model.ProjectInsights.TotalBidders</span>
                        <div class="insight-label">Total Bidders</div>
                    </div>
                    <div class="insight-card">
                        <span class="insight-value">₱@Model.ProjectInsights.AverageBidAmount.ToString("N0")</span>
                        <div class="insight-label">Average Bid</div>
                    </div>
                    <div class="insight-card">
                        <span class="insight-value">@Model.ProjectInsights.CompetitionLevel</span>
                        <div class="insight-label">Competition Level</div>
                    </div>
                    <div class="insight-card">
                        <span class="insight-value">@Model.ProjectInsights.EstimatedHiringTime</span>
                        <div class="insight-label">Est. Hiring Time</div>
                    </div>
                </div>

                <!-- Recommendations Section -->
                <div>
                    <div class="flex items-center justify-start mb-4">
                        <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 mr-2"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M12 17V11" stroke="#1C274C" stroke-width="1.5" stroke-linecap="round"></path> <circle cx="1" cy="1" r="1" transform="matrix(1 0 0 -1 11 9)" fill="#1C274C"></circle> <path d="M7 3.33782C8.47087 2.48697 10.1786 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 10.1786 2.48697 8.47087 3.33782 7" stroke="#1C274C" stroke-width="1.5" stroke-linecap="round"></path> </g></svg>
                        <small class="italic">Ranked by compatibility score</small>
                    </div>

                    @if (Model.Recommendations.Any())
                    {
                        @for (int i = 0; i < Model.Recommendations.Count; i++)
                        {
                            var recommendation = Model.Recommendations[i];
                            var scoreClass = recommendation.MatchScore >= 0.8f ? "score-excellent" :
                            recommendation.MatchScore >= 0.6f ? "score-good" :
                            recommendation.MatchScore >= 0.4f ? "score-fair" : "score-poor";

                            <div class="recommendation-card" style="position: relative;">
                                @* Only show badge for the #1 ranked freelancer *@
                                @if (i == 0 && Model.Recommendations.Count > 1)
                                {
                                    <div class="top-pick-badge">Top Pick</div>
                                }

                                <div class="recommendation-header">
                                    <img src="@(recommendation.FreelancerPhoto ?? "https://ik.imagekit.io/6txj3mofs/GIGHub%20(11).png?updatedAt=1750552804497")"
                                         alt="@recommendation.FreelancerName" class="freelancer-avatar">

                                    <div class="freelancer-info">
                                        <h3 class="font-bold">@recommendation.FreelancerName</h3>
                                        <div class="confidence-indicator">
                                            <span>Confidence:</span>
                                            <div class="confidence-bar">
                                                <div class="confidence-fill" style="width: @(recommendation.Confidence * 100)%"></div>
                                            </div>
                                            <span>@((recommendation.Confidence * 100).ToString("F0"))%</span>
                                        </div>
                                    </div>

                                    <div class="match-score">
                                        <div class="score-circle @scoreClass">
                                            @((recommendation.MatchScore * 100).ToString("F0"))%
                                        </div>
                                        <small>Match Score</small>
                                    </div>
                                </div>

                                <div class="recommendation-body">
                                    <div class="recommendation-grid">
                                        <div>
                                            <h6 class="italic mb-2 ml-2">Key Strengths</h6>
                                            <div class="strength-tags">
                                                @foreach (var strength in recommendation.KeyStrengths.Take(3))
                                                {
                                                    <span class="strength-tag">@strength</span>
                                                }
                                            </div>
                                        </div>

                                        <div>
                                            <h6 class="italic mb-2 ml-2">Considerations</h6>
                                            <div class="strength-tags">
                                                @foreach (var concern in recommendation.PotentialConcerns.Take(2))
                                                {
                                                    <span class="concern-tag">@concern</span>
                                                }
                                                @if (!recommendation.PotentialConcerns.Any())
                                                {
                                                    <span class="strength-tag">No major concerns</span>
                                                }
                                            </div>
                                        </div>
                                    </div>

                                    <div class="bid-details">
                                        <div class="grid gap-4 mb-4 grid-cols-2">
                                            <div class="col-span-2 sm:col-span-1">
                                                <strong>Proposed Budget:</strong><br>
                                                <span class="bid-amount">₱@recommendation.BidAmount.ToString("N0")</span>
                                            </div>
                                            <div class="col-span-2 sm:col-span-1">
                                                <strong>Proposed Delivery:</strong><br>
                                                <span class="bid-amount">@recommendation.ProposedDelivery</span>
                                            </div>
                                            <div class="col-span-2">
                                                <strong>Analysis:</strong><br>
                                                <span class="text-muted">@recommendation.Reasoning</span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="action-buttons">
                                        <button type="button" 
                                                class="btn btn-primary-custom"
                                                data-modal-target="acceptBidModal_@recommendation.BidId"
                                                data-modal-toggle="acceptBidModal_@recommendation.BidId">
                                            Accept Bid
                                        </button>

                                        <a href="@Url.Action("BidderDetails", new { id = Model.Project.Id, freelancerId = recommendation.FreelancerId })"
                                           class="btn btn-outline-custom">
                                            Detailed Analysis
                                        </a>

                                        <a href="@Url.Action("StartChat", "Chat", new { targetUserId = recommendation.FreelancerId })"
                                           class="btn btn-outline-custom">
                                            Message
                                        </a>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <h4>No recommendations available yet</h4>
                            <p class="text-muted">Please wait for freelancers to submit bids on your project.</p>
                        </div>
                    }
                </div>

                <!-- Accept Bid Modals -->
                @foreach (var recommendation in Model.Recommendations)
                {
                    <div id="acceptBidModal_@recommendation.BidId" tabindex="-1" class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full">
                        <div class="modal-backdrop absolute inset-0 bg-opacity-50 bg-opacity-50"></div>
                        <div class="relative p-4 w-full max-w-md max-h-full">
                            <div class="relative bg-white rounded-lg shadow">
                                <button type="button" class="absolute top-3 end-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center" data-modal-hide="acceptBidModal_@recommendation.BidId">
                                    <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
                                    </svg>
                                    <span class="sr-only">Close modal</span>
                                </button>

                                <div class="p-6 text-center">
                                    <svg class="mx-auto mb-4 text-gray-500 w-12 h-12" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 11V6m0 8h.01M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
                                    </svg>
                                    <h3 class="mb-5 text-lg font-normal text-gray-800">Are you sure you want to accept @recommendation.FreelancerName's bid?</h3>

                                    <form asp-action="AcceptBid" method="post" style="display: inline;">
                                        <input type="hidden" name="bidId" value="@recommendation.BidId" />
                                        <button type="submit"
                                                data-modal-hide="acceptBidModal_@recommendation.BidId"
                                                class="text-white bg-green-600 hover:bg-green-800 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center me-2">
                                            Yes, I'm sure
                                        </button>
                                    </form>
                                    <button type="button"
                                            data-modal-hide="acceptBidModal_@recommendation.BidId"
                                            class="text-gray-500 bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-gray-200 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10">
                                        No, cancel
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }

                <!-- Back Button -->
                <div class="text-center mt-4">
                    <a href="@Url.Action("ManageBid", "Client", new { id = Model.Project.Id })"
                       class="btn btn-outline-custom-1">
                        ← Back to Project Details
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Add some interactive animations
    document.addEventListener('DOMContentLoaded', function() {
        // Animate confidence bars
        const confidenceFills = document.querySelectorAll('.confidence-fill');
        confidenceFills.forEach(fill => {
            const width = fill.style.width;
            fill.style.width = '0%';
            setTimeout(() => {
                fill.style.width = width;
            }, 500);
        });

        // Add click tracking for recommendations
        document.querySelectorAll('.recommendation-card').forEach((card, index) => {
            card.addEventListener('click', function(e) {
                // Only track if not clicking on action buttons
                if (!e.target.closest('.action-buttons')) {
                    console.log(`Recommendation ${index + 1} viewed`);
                    // You can add analytics tracking here
                }
            });
        });

        // Modal functionality
        initializeModals();
    });

    // Modal functions
    function initializeModals() {
        // Show modal
        document.querySelectorAll('[data-modal-toggle]').forEach(button => {
            button.addEventListener('click', function() {
                const modalId = this.getAttribute('data-modal-toggle');
                const modal = document.getElementById(modalId);
                if (modal) {
                    modal.classList.remove('hidden');
                    modal.classList.add('flex');
                }
            });
        });

        // Hide modal
        document.querySelectorAll('[data-modal-hide]').forEach(button => {
            button.addEventListener('click', function() {
                const modalId = this.getAttribute('data-modal-hide');
                const modal = document.getElementById(modalId);
                if (modal) {
                    modal.classList.add('hidden');
                    modal.classList.remove('flex');
                }
            });
        });

        // Close modal when clicking outside
        document.querySelectorAll('[id^="acceptBidModal_"]').forEach(modal => {
            modal.addEventListener('click', function(e) {
                if (e.target === this) {
                    this.classList.add('hidden');
                    this.classList.remove('flex');
                }
            });
        });

        // Close modal on escape key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                document.querySelectorAll('[id^="acceptBidModal_"]').forEach(modal => {
                    if (!modal.classList.contains('hidden')) {
                        modal.classList.add('hidden');
                        modal.classList.remove('flex');
                    }
                });
            }
        });
    }
</script>
