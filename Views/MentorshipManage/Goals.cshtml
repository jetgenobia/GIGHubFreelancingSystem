@model Freelancing.Models.GoalViewModel
@{
    Layout = "_LayoutFreelancer";
    ViewData["Title"] = "My Goals";
}

<div class="p-9 sm:ml-64">
    <div class="p-9 mt-10">
        <div class="mt-4">
            <div class="block w-full p-6">
                <div class="flex justify-between items-center mb-6">
                    <h2 class="text-3xl font-bold text-gray-900">Learning Goals</h2>
                    <div class="text-sm text-gray-600">
                        Working with: <span class="font-semibold">@Model.PartnerName</span>
                    </div>
                </div>

                @if (TempData["Error"] != null)
                {
                    <div class="mt-2 p-4 mb-4 text-sm text-red-800 border border-red-300 rounded-lg bg-red-50" role="alert">
                        <svg class="shrink-0 inline w-4 h-4 me-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z" />
                        </svg>
                        <span class="sr-only">Error!</span>
                        <div>
                            @TempData["Error"]
                        </div>
                    </div>
                }
                @if (TempData["Success"] != null)
                {
                    <div class="mt-2 flex items-center p-4 mb-4 text-sm text-green-800 border border-green-300 rounded-lg bg-green-50" role="alert">
                        <svg class="shrink-0 inline w-4 h-4 me-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5Zm3.707 8.207-4 4a1 1 0 0 1-1.414 0l-2-2a1 1 0 0 1 1.414-1.414L9 10.586l3.293-3.293a1 1 0 0 1 1.414 1.414Z" />
                        </svg>
                        <span class="sr-only">Success</span>
                        <div>
                            @TempData["Success"]
                        </div>
                    </div>
                }

                <!-- Progress Summary -->
                <div class="mb-6 p-4 bg-blue-50 border border-blue-200 rounded-lg">
                    <div class="flex items-center justify-between">
                        <div>
                            <h3 class="text-lg font-semibold text-blue-900">Progress Summary</h3>
                            <p class="text-blue-700">@Model.CompletedGoals of @Model.TotalGoals goals completed</p>
                        </div>
                        <div class="text-right">
                            <div class="text-2xl font-bold text-blue-900">@Math.Round(Model.ProgressPercentage, 1)%</div>
                            <div class="text-sm text-blue-600">Complete</div>
                        </div>
                    </div>
                </div>

                @foreach (var goal in Model.Goals)
                {
                    <div class="ms-10 mr-10 mb-5">
                        <div class="w-full p-4 text-center bg-white border border-gray-200 rounded-lg shadow-sm sm:p-8 @(goal.IsFullyCompleted ? "border-green-300 bg-green-50" : "")">
                            <div class="flex items-center">
                                <div>
                                    @if (goal.IsFullyCompleted)
                                    {
                                        <!-- Completed Goal Icon -->
                                        <div class="w-[85px] h-[85px] text-gray-600">
                                            @Html.Raw(goal.IconSvg)
                                        </div>
                                    }
                                    else
                                    {
                                        <!-- Default goal icon -->
                                        <div class="w-[85px] h-[85px] text-gray-600">
                                            @Html.Raw(goal.IconSvg)
                                        </div>
                                    }
                                </div>
                                <div class="flex-1 min-w-0">
                                    <div class="text-start ms-5">
                                        <div class="mb-1">
                                            <h2 class="text-gray-900 text-lg font-bold">
                                                @goal.GoalName
                                            </h2>
                                        </div>
                                        <div>
                                            <p class="text-gray-600 text-base">
                                                @goal.GoalDescription
                                            </p>
                                        </div>
                                        @if (!string.IsNullOrEmpty(goal.CompletedBy))
                                        {
                                            <div class="mt-2">
                                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium @(goal.IsFullyCompleted ? "bg-green-100 text-green-800" : "bg-blue-100 text-blue-800")">
                                                    @if (goal.IsFullyCompleted)
                                                    {
                                                        <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                                                            <path d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" />
                                                        </svg>
                                                        <span>Completed by both</span>
                                                    }
                                                    else
                                                    {
                                                        <span>Completed by @goal.CompletedBy</span>
                                                    }
                                                </span>
                                                @if (goal.CompletedAt.HasValue)
                                                {
                                                    <span class="text-xs text-gray-500 ml-2">
                                                        @goal.CompletedAt.Value.ToString("MMM dd, yyyy")
                                                    </span>
                                                }
                                            </div>
                                        }
                                    </div>
                                </div>
                                <div>
                                    @if (goal.ShowMarkAsDoneButton)
                                    {
                                        <form asp-action="MarkGoalAsDone" method="post" class="inline">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="matchId" value="@Model.MatchId" />
                                            <input type="hidden" name="goalId" value="@goal.GoalId" />
                                            <button type="submit" class="focus:outline-none text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-4 py-2.5 me-2 mt-3">
                                                Mark as Done
                                            </button>
                                        </form>
                                    }
                                    else if (!goal.IsFullyCompleted)
                                    {
                                        <div class="text-sm text-gray-500 mt-3">
                                            @if (goal.Order > 1)
                                            {
                                                <span>Complete previous goal first</span>
                                            }
                                            else if (!goal.CanMarkAsDone)
                                            {
                                                <span>Already marked as done</span>
                                            }
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>