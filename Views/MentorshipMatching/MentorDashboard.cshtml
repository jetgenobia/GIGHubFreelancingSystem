@{
    Layout = "_LayoutFreelancer";
    ViewData["Title"] = "Dashboard";
}

@model Freelancing.Models.MentorDashboard

<div class="p-4 sm:ml-64">
    <div class="p-4 mt-20">
        <div class="mb-4">
            <h4 class="text-2xl font-bold text-dark font-medium">
                Hello, @User.FindFirst("FullName")?.Value
            </h4>
        </div>
        @if (TempData["Error"] != null)
        {
            <div class="mt-2 p-4 mb-4 text-sm text-red-800 border border-red-300 rounded-lg bg-red-50" role="alert">
                <svg class="shrink-0 inline w-4 h-4 me-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z" />
                </svg>
                <span class="sr-only">Error!</span>
                <div>
                    @TempData["Error"]
                </div>
            </div>
        }
        @if (TempData["Success"] != null)
        {
            <div class="mt-2 flex items-center p-4 mb-4 text-sm text-green-800 border border-green-300 rounded-lg bg-green-50" role="alert">
                <svg class="shrink-0 inline w-4 h-4 me-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5Zm3.707 8.207-4 4a1 1 0 0 1-1.414 0l-2-2a1 1 0 0 1 1.414-1.414L9 10.586l3.293-3.293a1 1 0 0 1 1.414 1.414Z" />
                </svg>
                <span class="sr-only">Success</span>
                <div>
                    @TempData["Success"]
                </div>
            </div>
        }
        <div class="grid grid-cols-2 gap-4 mb-4">
            <div class="w-full max-w p-4 bg-white border border-gray-300 rounded-lg shadow-sm sm:p-8">
                <div class="flex items-center justify-between mb-4">
                    <h5 class="text-xl font-bold leading-none text-gray-900">My Mentees</h5>
                </div>
                <div class="flow-root">
                    <ul role="list" class="divide-y divide-gray-300">
                        @{
                            var activeMentees = Model.RequestsReceived.Where(r => r.Status == "Active").ToList();
                        }
                        @if (activeMentees.Any())
                        {
                            @foreach (var request in activeMentees)
                            {
                                <li class="py-3 sm:py-4">
                                    <div class="flex items-center space-x-4">
                                        <div class="flex-shrink-0">
                                            <div class="w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center">
                                                <span class="text-white text-sm font-medium">
                                                    @{
                                                        var nameParts = request.MenteeName.Split(' ');
                                                        var initials = nameParts[0].Substring(0, 1) + (nameParts.Length > 1 ? nameParts[1].Substring(0, 1) : "");
                                                    }
                                                    @initials
                                                </span>
                                            </div>
                                        </div>
                                        <div class="flex-1 min-w-0">
                                            <p class="text-sm font-medium text-gray-900 truncate">
                                                @request.MenteeName
                                            </p>
                                            <p class="text-sm text-gray-500 truncate">
                                                Requested: @request.RequestDate.ToLocalTime().ToString("MMM dd, yyyy")
                                            </p>
                                            @if (request.StartDate.HasValue)
                                            {
                                                <p class="text-sm text-green-600 truncate">
                                                    Started: @request.StartDate.Value.ToLocalTime().ToString("MMM dd, yyyy")
                                                </p>
                                            }
                                        </div>
                                        <div class="inline-flex items-center text-sm text-gray-900">
                                            @if (request.Status == "Active")
                                            {
                                                <a asp-controller="MentorshipManage"
                                                   asp-action="Index"
                                                   asp-route-matchId="@request.Id"
                                                   class="btn btn-primary me-3">
                                                    <div class="inline-flex items-center">
                                                        <svg class="w-[12px] h-[12px] text-gray-800" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                                                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 13v-2a1 1 0 0 0-1-1h-.757l-.707-1.707.535-.536a1 1 0 0 0 0-1.414l-1.414-1.414a1 1 0 0 0-1.414 0l-.536.535L14 4.757V4a1 1 0 0 0-1-1h-2a1 1 0 0 0-1 1v.757l-1.707.707-.536-.535a1 1 0 0 0-1.414 0L4.929 6.343a1 1 0 0 0 0 1.414l.536.536L4.757 10H4a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h.757l.707 1.707-.535.536a1 1 0 0 0 0 1.414l1.414 1.414a1 1 0 0 0 1.414 0l.536-.535 1.707.707V20a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-.757l1.707-.708.536.536a1 1 0 0 0 1.414 0l1.414-1.414a1 1 0 0 0 0-1.414l-.535-.536.707-1.707H20a1 1 0 0 0 1-1Z" />
                                                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z" />
                                                        </svg>
                                                        Manage
                                                    </div>
                                                </a>
                                                <a asp-controller="MentorshipChat"
                                                   asp-action="Index"
                                                   asp-route-matchId="@request.Id"
                                                   class="btn btn-primary">
                                                    <div class="inline-flex items-center">
                                                        <svg class="w-[12px] h-[12px] text-gray-800" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                                                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 9h5m3 0h2M7 12h2m3 0h5M5 5h14a1 1 0 0 1 1 1v9a1 1 0 0 1-1 1h-6.616a1 1 0 0 0-.67.257l-2.88 2.592A.5.5 0 0 1 8 18.477V17a1 1 0 0 0-1-1H5a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1Z" />
                                                        </svg>
                                                        Chat
                                                    </div>
                                                </a>
                                            }
                                        </div>
                                    </div>
                                </li>
                            }
                        }
                        else
                        {
                            <li class="py-3 sm:py-4">
                                <div class="text-center">
                                    <div class="text-sm text-gray-500">
                                        No active mentees
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>

            <div class="w-full max-w p-4 bg-white border border-gray-300 rounded-lg shadow-sm sm:p-8">
                <div class="flex items-center justify-between mb-4">
                    <h5 class="text-xl font-bold leading-none text-gray-900">Requests Received</h5>
                </div>
                <div class="flow-root">
                    <ul role="list" class="divide-y divide-gray-300">
                        @{
                            var pendingMentees = Model.RequestsReceived.Where(r => r.Status == "Pending").ToList();
                        }
                        @if (pendingMentees.Any())
                        {
                            @foreach (var request in pendingMentees)
                            {
                                <li class="py-3 sm:py-4">
                                    <div class="flex items-center space-x-4">
                                        <div class="flex-shrink-0">
                                            <div class="w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center">
                                                <span class="text-white text-sm font-medium">
                                                    @{
                                                        var nameParts = request.MenteeName.Split(' ');
                                                        var initials = nameParts[0].Substring(0, 1) + (nameParts.Length > 1 ? nameParts[1].Substring(0, 1) : "");
                                                    }
                                                    @initials
                                                </span>
                                            </div>
                                        </div>
                                        <div class="flex-1 min-w-0">
                                            <p class="text-sm font-medium text-gray-900 truncate">
                                                @request.MenteeName
                                            </p>
                                            <p class="text-sm text-gray-500 truncate">
                                                Requested: @request.RequestDate.ToString("MMM dd, yyyy")
                                            </p>
                                            @if (request.StartDate.HasValue)
                                            {
                                                <p class="text-sm text-green-600 truncate">
                                                    Started: @request.StartDate.Value.ToString("MMM dd, yyyy")
                                                </p>
                                            }
                                        </div>
                                        <div class="inline-flex items-center text-base font-semibold text-gray-900">
                                            @{
                                                var statusClass = request.Status.ToLower() switch
                                                {
                                                    "pending" => "bg-yellow-100 text-yellow-800",
                                                    "active" => "bg-green-100 text-green-800",
                                                    "rejected" => "bg-red-100 text-red-800",
                                                    "completed" => "bg-blue-100 text-blue-800",
                                                    "cancelled" => "bg-gray-100 text-gray-800",
                                                    _ => "bg-gray-100 text-gray-800"
                                                };
                                            }
                                            <span class="@statusClass px-2 py-1 text-xs font-medium rounded-full">
                                                @request.Status
                                            </span>
                                        </div>
                                        @if (request.Status == "Active")
                                        {
                                            <a asp-controller="MentorshipChat"
                                               asp-action="Index"
                                               asp-route-matchId="@request.Id"
                                               class="btn btn-primary">
                                                💬 Chat
                                            </a>
                                        }
                                    </div>
                                </li>
                            }
                        }
                        else
                        {
                            <li class="py-3 sm:py-4">
                                <div class="text-center">
                                    <div class="text-sm text-gray-500">
                                        No mentorship requests received
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                    <div class="text-center">
                        <a asp-controller="MentorshipMatching" asp-action="PendingRequests" type="button" class="text-gray-900 bg-white border border-gray-300 focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-100 font-medium rounded-lg text-sm px-5 py-2 me-2 mb-2 dark:bg-gray-800 dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700">
                            Manage Requests
                        </a>
                    </div>
                </div>
            </div>
            <div class="w-full max-w p-4 bg-white border border-gray-300 rounded-lg shadow-sm sm:p-8">
                <div class="flex items-center justify-between mb-4">
                    <h5 class="text-xl font-bold leading-none text-gray-900">Upcoming Sessions</h5>
                </div>
                <div class="flow-root">
                    <ul role="list" class="divide-y divide-gray-300">
                        @if (Model.UpcomingSessions.Any())
                        {
                            @foreach (var s in Model.UpcomingSessions)
                            {
                                <li class="py-3 sm:py-4">
                                    <div class="flex items-center justify-between">
                                        <div>
                                            <div class="text-sm font-medium text-gray-900">@(!string.IsNullOrWhiteSpace(s.Title) ? s.Title : "Session")</div>
                                            <div class="text-sm text-gray-600">With @s.PartnerName • @s.StartUtc.ToString("MMM dd, yyyy h:mm tt")</div>
                                        </div>
                                        <div class="inline-flex items-center text-sm text-gray-900">
                                            <a asp-controller="MentorshipChat"
                                               asp-action="Index"
                                               asp-route-matchId="@s.MatchId"
                                               class="btn btn-primary">
                                                <div class="inline-flex items-center">
                                                    <svg class="w-[12px] h-[12px] text-gray-800" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                                                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 9h5m3 0h2M7 12h2m3 0h5M5 5h14a1 1 0 0 1 1 1v9a1 1 0 0 1-1 1h-6.616a1 1 0 0 0-.67.257l-2.88 2.592A.5.5 0 0 1 8 18.477V17a1 1 0 0 0-1-1H5a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1Z" />
                                                    </svg>
                                                    Open Chat
                                                </div>
                                            </a>
                                        </div>
                                    </div>
                                </li>
                            }
                        }
                        else
                        {
                            <li class="py-3 sm:py-4"><div class="text-sm text-center text-gray-500">No upcoming sessions</div></li>
                        }
                    </ul>
                </div>
            </div>
            <div class="w-full max-w p-4 bg-white border border-gray-300 rounded-lg shadow-sm sm:p-8">
                <div class="flex items-center justify-between mb-4">
                    <h5 class="text-xl font-bold leading-none text-gray-900">Proposed Sessions</h5>
                </div>
                <div class="flow-root">
                    <ul role="list" class="divide-y divide-gray-300">
                        @if (Model.ProposedSessions.Any())
                        {
                            @foreach (var s in Model.ProposedSessions)
                            {
                                <li class="py-3 sm:py-4">
                                    <div class="flex items-center justify-between">
                                        @if (!s.IsCreatedByCurrentUser)
                                        {
                                            <div>
                                                <div class="text-sm font-medium text-gray-900">@(!string.IsNullOrWhiteSpace(s.Title) ? s.Title : "Proposed Session")</div>
                                                <div class="text-sm text-gray-600">From @s.PartnerName • @s.StartUtc.ToString("MMM dd, yyyy h:mm tt")</div>
                                            </div>
                                            <div class="flex gap-2">
                                                <form asp-controller="MentorshipManage" asp-action="AcceptSession" method="post">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="sessionId" value="@s.SessionId" />
                                                    <input type="hidden" name="returnUrl" value="@Url.Action("MentorDashboard", "MentorshipMatching")" />
                                                    <button class="focus:outline-none text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mt-3">Accept</button>
                                                </form>
                                                <form asp-controller="MentorshipManage" asp-action="DeclineSession" method="post">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="sessionId" value="@s.SessionId" />
                                                    <input type="hidden" name="returnUrl" value="@Url.Action("MentorDashboard", "MentorshipMatching")" />
                                                    <button class="focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mt-3">Decline</button>
                                                </form>
                                            </div>
                                        }
                                        else
                                        {
                                            <div>
                                                <div class="text-sm font-medium text-gray-900">@(!string.IsNullOrWhiteSpace(s.Title) ? s.Title : "Proposed Session")</div>
                                                <div class="text-sm text-gray-600">Created by You • @s.StartUtc.ToString("MMM dd, yyyy h:mm tt")</div>
                                            </div>
                                            <div class="text-sm text-gray-500">Awaiting response</div>
                                        }
                                    </div>
                                </li>
                            }
                        }
                        else
                        {
                            <li class="py-3 sm:py-4"><div class="text-sm text-center text-gray-500">No proposals awaiting your response</div></li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>