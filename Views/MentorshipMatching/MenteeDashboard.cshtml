@{
    Layout = "_LayoutFreelancer";
    ViewData["Title"] = "Dashboard";
}

@model Freelancing.Models.MenteeDashboard

<div class="p-4 sm:ml-64">
    <div class="p-4 mt-20">
        <div class="mb-4">
            <h4 class="text-2xl font-bold text-dark font-medium">
                Hello, @User.FindFirst("FullName")?.Value
            </h4>
        </div>

        <div class="grid grid-cols-2 gap-4 mb-4">

            <div class="w-full max-w p-4 bg-white border border-gray-300 rounded-lg shadow-sm sm:p-8">
                <div class="flex items-center justify-between mb-4">
                    <h5 class="text-xl font-bold leading-none text-gray-900">My Mentor</h5>
                </div>
                <div class="flow-root">
                    <ul role="list" class="divide-y divide-gray-300">
                        @{
                            var activeMentor = Model.RequestsSent.Where(r => r.Status == "Active").ToList();
                        }
                        @if (activeMentor.Any())
                        {
                            @foreach (var request in activeMentor)
                            {
                                <li class="py-3 sm:py-4">
                                    <div class="flex items-center space-x-4">
                                        <div class="flex-shrink-0">
                                            <div class="w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center">
                                                <span class="text-white text-sm font-medium">
                                                    @{
                                                        var nameParts = request.MentorName.Split(' ');
                                                        var initials = nameParts[0].Substring(0, 1) + (nameParts.Length > 1 ? nameParts[1].Substring(0, 1) : "");
                                                    }
                                                    @initials
                                                </span>
                                            </div>
                                        </div>
                                        <div class="flex-1 min-w-0">
                                            <p class="text-sm font-medium text-gray-900 truncate">
                                                @request.MentorName
                                            </p>
                                            <p class="text-sm text-gray-500 truncate">
                                                Requested: @request.RequestDate.ToString("MMM dd, yyyy")
                                            </p>
                                            @if (request.StartDate.HasValue)
                                            {
                                                <p class="text-sm text-green-600 truncate">
                                                    Started: @request.StartDate.Value.ToString("MMM dd, yyyy")
                                                </p>
                                            }
                                        </div>
                                        <div class="inline-flex items-center text-sm text-gray-900">
                                            @if (request.Status == "Active")
                                            {
                                                <a asp-controller="MentorshipChat"
                                                   asp-action="Index"
                                                   asp-route-matchId="@request.Id"
                                                   class="btn btn-primary">
                                                    <div class="inline-flex items-center">
                                                        <svg class="w-[12px] h-[12px] text-gray-800" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                                                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 9h5m3 0h2M7 12h2m3 0h5M5 5h14a1 1 0 0 1 1 1v9a1 1 0 0 1-1 1h-6.616a1 1 0 0 0-.67.257l-2.88 2.592A.5.5 0 0 1 8 18.477V17a1 1 0 0 0-1-1H5a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1Z" />
                                                        </svg>
                                                        <div class="mb-1">
                                                            Chat
                                                        </div>
                                                    </div>
                                                </a>
                                            }
                                        </div>
                                    </div>
                                </li>
                            }
                        }
                        else
                        {
                            <li class="py-3 sm:py-4">
                                <div class="text-center">
                                    <div class="text-sm text-gray-500">
                                        No mentorship requests sent
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                    @{
                        var hasActiveMentor = Model.RequestsSent.Any(r => r.Status == "Active");
                    }
                    @if (!hasActiveMentor)
                    {
                        <div class="text-center">
                            <a asp-controller="MentorshipMatching" asp-action="AvailableMentors" type="button" class="text-gray-900 bg-white border border-gray-300 focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-100 font-medium rounded-lg text-sm px-5 py-2 me-2 mb-2 dark:bg-gray-800 dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700">
                                Find Mentors
                            </a>
                        </div>
                    }
                </div>
            </div>
            <div class="w-full max-w p-4 bg-white border border-gray-300 rounded-lg shadow-sm sm:p-8">
                <div class="flex items-center justify-between mb-4">
                    <h5 class="text-xl font-bold leading-none text-gray-900">Upcoming Sessions</h5>
                </div>
                <div class="flow-root">
                    <ul role="list" class="divide-y divide-gray-300">
                    </ul>
                </div>
            </div>
            <div class="w-full max-w p-4 bg-white border border-gray-300 rounded-lg shadow-sm sm:p-8">
                <div class="flex items-center justify-between mb-4">
                    <h5 class="text-xl font-bold leading-none text-gray-900">Learning Goals</h5>
                </div>
                <div class="flow-root">
                    <ul role="list" class="divide-y divide-gray-300">
                    </ul>
                </div>
            </div>
            <div class="w-full max-w p-4 bg-white border border-gray-300 rounded-lg shadow-sm sm:p-8">
                <div class="flex items-center justify-between mb-4">
                    <h5 class="text-xl font-bold leading-none text-gray-900">Session History</h5>
                </div>
                <div class="flow-root">
                    <ul role="list" class="divide-y divide-gray-300">
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>