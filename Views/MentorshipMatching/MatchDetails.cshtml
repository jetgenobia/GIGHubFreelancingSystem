@{
    Layout = "_LayoutFreelancer";
    ViewData["Title"] = "Match Details";
}

@model Freelancing.Models.MatchDetailsViewModel

<div class="container-fluid p-4 sm:ml-64">
    <div class="row">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "PeerMentorship")">Mentorship</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("Index")">Matching</a></li>
                    <li class="breadcrumb-item active">Match Details</li>
                </ol>
            </nav>

            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2><i class="fas fa-handshake"></i> Match Details</h2>
                <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left"></i> Back to Matching
                </a>
            </div>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <div class="row">
                <!-- Match Information -->
                <div class="col-lg-8">
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5><i class="fas fa-info-circle"></i> Match Information</h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="text-center mb-3">
                                        @if (!string.IsNullOrEmpty(Model.Partner.Photo))
                                        {
                                            <img src="@Model.Partner.Photo" alt="Profile" class="rounded-circle mb-2" style="width: 100px; height: 100px; object-fit: cover;">
                                        }
                                        else
                                        {
                                            <div class="bg-secondary rounded-circle mx-auto mb-2 d-flex align-items-center justify-content-center" style="width: 100px; height: 100px;">
                                                <i class="fas fa-user text-white fa-2x"></i>
                                            </div>
                                        }
                                        <h5>@Model.Partner.FirstName @Model.Partner.LastName</h5>
                                        <span class="badge bg-primary">@Model.PartnerRole</span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <table class="table table-sm">
                                        <tr>
                                            <td><strong>Status:</strong></td>
                                            <td>
                                                @if (Model.Match.Status == "Active")
                                                {
                                                    <span class="badge bg-success">@Model.Match.Status</span>
                                                }
                                                else if (Model.Match.Status == "Completed")
                                                {
                                                    <span class="badge bg-info">@Model.Match.Status</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-secondary">@Model.Match.Status</span>
                                                }
                                            </td>
                                        </tr>
                                        <tr>
                                            <td><strong>Matched Date:</strong></td>
                                            <td>@Model.Match.MatchedDate.ToString("MMM dd, yyyy")</td>
                                        </tr>
                                        @if (Model.Match.StartDate.HasValue)
                                        {
                                            <tr>
                                                <td><strong>Start Date:</strong></td>
                                                <td>@Model.Match.StartDate.Value.ToString("MMM dd, yyyy")</td>
                                            </tr>
                                        }
                                        @if (Model.Match.EndDate.HasValue)
                                        {
                                            <tr>
                                                <td><strong>End Date:</strong></td>
                                                <td>@Model.Match.EndDate.Value.ToString("MMM dd, yyyy")</td>
                                            </tr>
                                        }
                                        <tr>
                                            <td><strong>Duration:</strong></td>
                                            <td>
                                                @if (Model.Match.EndDate.HasValue)
                                                {
                                                    var duration = Model.Match.EndDate.Value - (Model.Match.StartDate ?? Model.Match.MatchedDate);
                                                    @($"{duration.Days} days")
                                                }
                                                else if (Model.Match.StartDate.HasValue)
                                                {
                                                    var duration = DateTime.UtcNow - Model.Match.StartDate.Value;
                                                    @($"{duration.Days} days (ongoing)")
                                                }
                                                else
                                                {
                                                    var duration = DateTime.UtcNow - Model.Match.MatchedDate;
                                                    @($"{duration.Days} days (not started)")
                                                }
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>

                            @if (!string.IsNullOrEmpty(Model.Match.Notes))
                            {
                                <hr>
                                <div>
                                    <h6><i class="fas fa-sticky-note"></i> Notes</h6>
                                    <p class="text-muted">@Model.Match.Notes</p>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Shared Skills -->
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5><i class="fas fa-cogs"></i> Shared Skills (@Model.SharedSkills.Count)</h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                @foreach (var skill in Model.SharedSkills)
                                {
                                    <div class="col-md-4 col-sm-6 mb-2">
                                        <span class="badge bg-success fs-6">@skill.Name</span>
                                    </div>
                                }
                            </div>
                            <div class="alert alert-info mt-3">
                                <i class="fas fa-info-circle"></i>
                                This match was created based on 100% skill compatibility. Both users have identical skill sets.
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Actions -->
                <div class="col-lg-4">
                    <div class="card">
                        <div class="card-header">
                            <h5><i class="fas fa-tools"></i> Actions</h5>
                        </div>
                        <div class="card-body">
                            @if (Model.Match.Status == "Active")
                            {
                                <div class="d-grid gap-2 mb-3">
                                    <button class="btn btn-success" onclick="updateStatus('Completed')">
                                        <i class="fas fa-check"></i> Mark as Completed
                                    </button>
                                    <button class="btn btn-warning" onclick="updateStatus('Cancelled')">
                                        <i class="fas fa-times"></i> Cancel Match
                                    </button>
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-info">
                                    <i class="fas fa-info-circle"></i>
                                    This match is @Model.Match.Status.ToLower() and cannot be modified.
                                </div>
                            }

                            <div class="border-top pt-3">
                                <h6>Contact Information</h6>
                                <p class="mb-1"><strong>Email:</strong> @Model.Partner.Email</p>
                                <p class="mb-1"><strong>Username:</strong> @Model.Partner.UserName</p>
                            </div>

                            <div class="border-top pt-3">
                                <h6>Match Statistics</h6>
                                <small class="text-muted">
                                    <div>Matched: @Model.Match.MatchedDate.ToString("MMM dd, yyyy")</div>
                                    <div>Skills in common: @Model.SharedSkills.Count</div>
                                    <div>Compatibility: 100%</div>
                                </small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Update Status Modal -->
<div class="modal fade" id="updateStatusModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Update Match Status</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="updateStatusForm" method="post" action="@Url.Action("UpdateMatchStatus")">
                <div class="modal-body">
                    <input type="hidden" name="matchId" value="@Model.Match.Id" />
                    <input type="hidden" id="statusInput" name="status" />

                    <p>Are you sure you want to mark this match as <strong id="statusText"></strong>?</p>

                    <div class="mb-3">
                        <label for="statusNotes" class="form-label">Notes (Optional)</label>
                        <textarea class="form-control" id="statusNotes" name="notes" rows="3" placeholder="Add any final notes about this mentorship..."></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary" id="confirmButton">
                        <i class="fas fa-check"></i> Confirm
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateStatus(status) {
            document.getElementById('statusInput').value = status;
            document.getElementById('statusText').textContent = status.toLowerCase();

            const confirmButton = document.getElementById('confirmButton');
            if (status === 'Completed') {
                confirmButton.className = 'btn btn-success';
                confirmButton.innerHTML = '<i class="fas fa-check"></i> Mark Completed';
            } else if (status === 'Cancelled') {
                confirmButton.className = 'btn btn-warning';
                confirmButton.innerHTML = '<i class="fas fa-times"></i> Cancel Match';
            }

            new bootstrap.Modal(document.getElementById('updateStatusModal')).show();
        }
    </script>
}